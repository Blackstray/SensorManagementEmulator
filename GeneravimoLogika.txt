using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace ValueGenerator
{
    class Program
    {
        public static Action<double> klaida;
        
        static void Main(string[] args)
        {
            double skaicius = 100;
            //double min = 10;
            //double max = 200;
            Task.Factory.StartNew(() =>
            {
                for (int i = 0; i < 1000000; i++)
                {
                    Console.WriteLine(skaicius);
                    generateValue(skaicius - 90, skaicius + 100, ref skaicius, false);
                }
            });
            //for(int i = 0; i < 1000000; i++)
            //{
            //    Console.WriteLine(skaicius);
            //    generateValue(skaicius - 90, skaicius + 100, ref skaicius, true);
            //}
        }

        public static void generateValue(double min, double max, ref double curValue, Boolean kl)
        {
            bool error = false;
            klaida += b => { error = true; };
            if(kl == false)
            {
                //Vidutine reiksme
                double nomValue = min + (max - min) / 2;
                Random random = new Random();
                //pridedama arba atimama reiksme
                double modValue = nomValue * random.NextDouble()/30;
                double maxValue = nomValue + nomValue * 0.03;
                double minValue = nomValue - nomValue * 0.03;
                int chance = random.Next(0, 3);
                //Sugeneruojamas skaicius nuo 0 iki 2. Jei 2 pridedame, jei 0 atimame. Dar tikriname kad verte nekerta min arba maks reiksmiu.
                if (chance == 2 && curValue + modValue < maxValue)
                {
                    curValue = curValue + modValue;
                }
                if (chance == 0 && curValue - modValue > minValue)
                {
                    curValue = curValue - modValue;
                }
            }
            else
            {
                //Vidutine reiksme
                double nomValue = min + (max - min) / 2;
                Random random = new Random();
                //pridedama arba atimama reiksme
                double modValue = nomValue * random.NextDouble() / 100;
                double chance = random.Next(0, 3);
                //Sugeneruojamas skaicius nuo 0 iki 2. Jei 2 pridedame, jei 0 atimame. Dar tikriname kad verte nekerta min arba maks reiksmiu.
                if (chance == 2 && curValue + modValue < max)
                {
                    curValue = curValue + modValue;
                }
                if (chance == 0 && curValue + modValue > min)
                {
                    curValue = curValue - modValue;
                }
            }
            Thread.Sleep(1000);
        }
    }
}